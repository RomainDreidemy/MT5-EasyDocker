// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in a new user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserLoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SignUpInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    }
                }
            }
        },
        "/env_variables/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Env Variables"
                ],
                "summary": "Get an env variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Env Variable ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceEnvVariableResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Env Variables"
                ],
                "summary": "Update a service env variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Env Variable ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceEnvVariableUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceEnvVariableResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Env Variables"
                ],
                "summary": "Delete a service env variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Env Variable ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/managed_volumes/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Managed Volumes"
                ],
                "summary": "Get a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ManagedVolumeResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Managed Volumes"
                ],
                "summary": "Update a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Managed Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ManagedVolumeUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ManagedVolumeResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Managed Volumes"
                ],
                "summary": "Delete a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/networks/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Get a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NetworkResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Update a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NetworkUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.NetworkResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Delete a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/ports/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Ports"
                ],
                "summary": "Get a port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Port ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServicePortResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Ports"
                ],
                "summary": "Update a service port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Port ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServicePortUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServicePortResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Ports"
                ],
                "summary": "Delete a service port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Port ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/service_managed_volume_links": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volume Links"
                ],
                "summary": "Create a new link between a service and a volume",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceManagedVolumeLinkCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceNetworkLinkResponse"
                        }
                    }
                }
            }
        },
        "/service_managed_volume_links/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volume Links"
                ],
                "summary": "Delete a link between a service and a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Volume Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/service_network_links": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Network Links"
                ],
                "summary": "Create a new link between a service and a network",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceNetworkLinkCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceNetworkLinkResponse"
                        }
                    }
                }
            }
        },
        "/service_network_links/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Network Links"
                ],
                "summary": "Delete a link between a service and a network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Network Link ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceResponseItem"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Update a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Delete a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/services/{serviceId}/env_variables": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Env Variables"
                ],
                "summary": "Get env variables for a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceEnvVariableResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Env Variables"
                ],
                "summary": "Create a new service env variable",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceEnvVariableCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceEnvVariableResponse"
                        }
                    }
                }
            }
        },
        "/services/{serviceId}/ports": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Ports"
                ],
                "summary": "Get ports for a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServicePortResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Ports"
                ],
                "summary": "Create a new service port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServicePortCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ServicePortResponse"
                        }
                    }
                }
            }
        },
        "/services/{serviceId}/volumes": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volumes"
                ],
                "summary": "Get volumes for a service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceVolumeResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volumes"
                ],
                "summary": "Create a new service volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service ID",
                        "name": "serviceId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVolumeCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVolumeResponse"
                        }
                    }
                }
            }
        },
        "/stacks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Get stacks for current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.StackResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Create a new stack",
                "parameters": [
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StackCreateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StackResponse"
                        }
                    }
                }
            }
        },
        "/stacks/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Get a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StackResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Update a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StackUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StackResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Stacks"
                ],
                "summary": "Delete a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/stacks/{stackId}/board": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Board"
                ],
                "summary": "Get board",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "stackId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Board"
                            }
                        }
                    }
                }
            }
        },
        "/stacks/{stackId}/managed_volumes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Managed Volumes"
                ],
                "summary": "Create a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "stackId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Volume",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ManagedVolumeCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ManagedVolumeResponse"
                        }
                    }
                }
            }
        },
        "/stacks/{stackId}/networks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Get networks for a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "stackId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NetworkResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Networks"
                ],
                "summary": "Create a new network",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "stackId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.NetworkCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.NetworkResponse"
                        }
                    }
                }
            }
        },
        "/stacks/{stackId}/services": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get services for a stack",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "stackId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ServiceResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stack ID",
                        "name": "stackId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceCreateInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceResponse"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    }
                }
            }
        },
        "/volumes/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volumes"
                ],
                "summary": "Get a volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVolumeResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volumes"
                ],
                "summary": "Update a service volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "query params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVolumeUpdateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ServiceVolumeResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Service Volumes"
                ],
                "summary": "Delete a service port",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service Volume ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Board": {
            "type": "object",
            "properties": {
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BoardItem"
                    }
                },
                "serviceNetworkLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceNetworkLinkResponse"
                    }
                },
                "serviceVolumeLinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceManagedVolumeLinkResponse"
                    }
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BoardItem"
                    }
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.BoardItem"
                    }
                }
            }
        },
        "models.BoardItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ManagedVolumeCreateInput": {
            "type": "object",
            "required": [
                "name",
                "positionX",
                "positionY"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ManagedVolumeResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ManagedVolumeUpdateInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.NetworkCreateInput": {
            "type": "object",
            "required": [
                "driver",
                "name",
                "positionX",
                "positionY"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "isExternal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.NetworkResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isExternal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.NetworkUpdateInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "driver": {
                    "type": "string"
                },
                "isExternal": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ServiceCreateInput": {
            "type": "object",
            "required": [
                "positionX",
                "positionY"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "dockerImage": {
                    "type": "string"
                },
                "dockerTag": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ServiceEnvVariableCreateInput": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ServiceEnvVariableResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ServiceEnvVariableUpdateInput": {
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ServiceManagedVolumeLinkCreateInput": {
            "type": "object",
            "required": [
                "managedVolumeArrowPosition",
                "managedVolumeId",
                "serviceArrowPosition",
                "serviceId"
            ],
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "managedVolumeArrowPosition": {
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                },
                "managedVolumeId": {
                    "type": "string"
                },
                "serviceArrowPosition": {
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                },
                "serviceId": {
                    "type": "string"
                }
            }
        },
        "models.ServiceManagedVolumeLinkResponse": {
            "type": "object",
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "managedVolumeArrowPosition": {
                    "type": "string"
                },
                "managedVolumeId": {
                    "type": "string"
                },
                "serviceArrowPosition": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                }
            }
        },
        "models.ServiceNetworkLinkCreateInput": {
            "type": "object",
            "required": [
                "networkArrowPosition",
                "networkId",
                "serviceArrowPosition",
                "serviceId"
            ],
            "properties": {
                "networkArrowPosition": {
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                },
                "networkId": {
                    "type": "string"
                },
                "serviceArrowPosition": {
                    "type": "string",
                    "enum": [
                        "top",
                        "bottom",
                        "left",
                        "right"
                    ]
                },
                "serviceId": {
                    "type": "string"
                }
            }
        },
        "models.ServiceNetworkLinkResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "networkArrowPosition": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "serviceArrowPosition": {
                    "type": "string"
                },
                "serviceId": {
                    "type": "string"
                }
            }
        },
        "models.ServicePortCreateInput": {
            "type": "object",
            "required": [
                "private"
            ],
            "properties": {
                "private": {
                    "type": "integer"
                },
                "public": {
                    "type": "integer"
                }
            }
        },
        "models.ServicePortResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "private": {
                    "type": "integer"
                },
                "public": {
                    "type": "integer"
                }
            }
        },
        "models.ServicePortUpdateInput": {
            "type": "object",
            "required": [
                "private"
            ],
            "properties": {
                "private": {
                    "type": "integer"
                },
                "public": {
                    "type": "integer"
                }
            }
        },
        "models.ServiceResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dockerImage": {
                    "type": "string"
                },
                "dockerTag": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ServiceResponseItem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "dockerImage": {
                    "type": "string"
                },
                "dockerTag": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "envVariables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceEnvVariableResponse"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServicePortResponse"
                    }
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                },
                "volumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ServiceVolumeResponse"
                    }
                }
            }
        },
        "models.ServiceUpdateInput": {
            "type": "object",
            "properties": {
                "context": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dockerImage": {
                    "type": "string"
                },
                "dockerTag": {
                    "type": "string"
                },
                "dockerfile": {
                    "type": "string"
                },
                "entrypoint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "positionX": {
                    "type": "number"
                },
                "positionY": {
                    "type": "number"
                }
            }
        },
        "models.ServiceVolumeCreateInput": {
            "type": "object",
            "required": [
                "localPath"
            ],
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "localPath": {
                    "type": "string"
                }
            }
        },
        "models.ServiceVolumeResponse": {
            "type": "object",
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "localPath": {
                    "type": "string"
                }
            }
        },
        "models.ServiceVolumeUpdateInput": {
            "type": "object",
            "required": [
                "localPath"
            ],
            "properties": {
                "containerPath": {
                    "type": "string"
                },
                "localPath": {
                    "type": "string"
                }
            }
        },
        "models.SignInInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.SignUpInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "passwordConfirm"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "passwordConfirm": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "models.StackCreateInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "models.StackResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.StackUpdateInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "models.UserLoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.UserResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "EasyDocker API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
